parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
  - job: CodeBuild
    pool:
      name: DAS - Continuous Integration Agents
      workspace:
        clean: all
    variables:
      - group: BUILD Management Resources
    steps:
    - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

    - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
      parameters:
        RunAcceptanceTests: false
  
    - task: DotNetCoreCLI@2
      displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }}.Web
      inputs:
        command: publish
        publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
        projects: src/${{ parameters.SolutionBaseName }}.Support.SubSite/${{ parameters.SolutionBaseName }}.Support.SubSite.csproj
        arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
        modifyOutputPath: true
        zipAfterPublish: true
    
    - task: DotNetCoreCLI@2
      displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }}.Api
      inputs:
        command: publish
        publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
        projects: src/CommitmentsV2/${{ parameters.SolutionBaseName }}V2.Api/${{ parameters.SolutionBaseName }}V2.Api.csproj
        arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
        modifyOutputPath: true
        zipAfterPublish: true
  
    - task: DotNetCoreCLI@2
      displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }}.Host
      inputs:
        command: publish
        publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
        projects: src/CommitmentsV2/${{ parameters.SolutionBaseName }}V2.Host/${{ parameters.SolutionBaseName }}V2.Host.csproj
        arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
        modifyOutputPath: true
        zipAfterPublish: true

    - task: CopyFiles@2
      displayName: Copy Files to $(build.artifactstagingdirectory)/publish
      inputs:
        Contents: |
          azure/**
        TargetFolder: $(build.artifactstagingdirectory)/publish
  
    - task: PublishPipelineArtifact@1
      displayName: Publish Build Artifact
      inputs:
        targetPath: $(build.artifactstagingdirectory)/publish
        artifactName: ${{ parameters.SolutionBaseName }}