jobs:
- job: 'CodeBuild'
  pool:
    name: 'DAS - Continuous Integration'
    demands: Agent.OS -equals Windows_NT

  variables:
  - group: BUILD Management Resources
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'any cpu'  
  
  steps:
    - task: UseGitVersion@5
      displayName: GitVersion
      inputs:
        versionSpec: 5.x
        mode: Mainline

    - task: SonarCloudPrepare@1
      displayName: Prepare SonarCloud analysis configuration
      condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
      inputs:
        SonarCloud: ESFA - SonarCloud
        organization: $(SonarCloudOrganisationKey)
        scannerMode: MSBuild
        projectName: "$(Build.DefinitionName)"
        projectKey: SkillsFundingAgency_das-commitments

    - template: azure-pipelines-templates/build/step/dependency-check.yml@das-platform-building-blocks

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.3.0'
      inputs:
        versionSpec: 4.x

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'src/SFA.DAS.Commitments.sln'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: "src/**/*.csproj"   

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: 'src/SFA.DAS.Commitments.sln'
        vsVersion: 15.0
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: 'src/CommitmentsV2/**/*.UnitTests.csproj'   

    - task: DotNetCoreCLI@2
      displayName: 'Publish v2 API'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api/SFA.DAS.CommitmentsV2.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore  --no-build'      

    - task: DotNetCoreCLI@2
      displayName: 'publish v2 WebJob'
      inputs:
        command: custom
        projects: 'src/CommitmentsV2/SFA.DAS.CommitmentsV2.Host/SFA.DAS.CommitmentsV2.Host.csproj'
        custom: msbuild
        arguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'

  
    - task: VSBuild@1
      displayName: 'Publish v1 API'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Api/SFA.DAS.Commitments.Api.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true    

    - task: VSBuild@1
      displayName: 'Publish Support Site'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Support.SubSite/SFA.DAS.Commitments.Support.SubSite.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: VSBuild@1
      displayName: 'Publish v1 WebJob'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Host.WebJob/SFA.DAS.Commitments.Host.WebJob.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: NuGetCommand@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: 'src/SFA.DAS.Commitments.Events/SFA.DAS.Commitments.Events.csproj'
        packDestination: '$(build.artifactstagingdirectory)/publish/nuget-publish'
        versioningScheme: byBuildNumber

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        packagesToPack: 'src/SFA.DAS.Commitments.Api.Client/SFA.DAS.Commitments.Api.Client.csproj;src/SFA.DAS.Commitments.Api.Types/SFA.DAS.Commitments.Api.Types.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api.Client/SFA.DAS.CommitmentsV2.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api.Types/SFA.DAS.CommitmentsV2.Api.Types.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Messages/SFA.DAS.CommitmentsV2.Messages.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Types/SFA.DAS.CommitmentsV2.Types.csproj;src/SFA.DAS.Reservations.Api.Client/SFA.DAS.Reservations.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.ReservationsV2.Api.Client/SFA.DAS.ReservationsV2.Api.Client.csproj;src/SFA.DAS.Reservations.API.Types/SFA.DAS.Reservations.Api.Types.csproj;src/SFA.DAS.Reservations.Api.Client/SFA.DAS.Reservations.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Shared/SFA.DAS.CommitmentsV2.Shared.csproj'
        packDirectory: 'nuget-publish'
        versioningScheme: byBuildNumber
        buildProperties: 'Version="$(Build.BuildNumber)"'  
    
    - task: VSBuild@1
      displayName: 'Build DACPAC'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Database/SFA.DAS.Commitments.Database.sqlproj'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'    

    - task: SonarCloudAnalyze@1
      displayName: Run SonarCloud analysis
      condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

    - task: SonarCloudPublish@1
      displayName: Publish SonarCloud analysis results on build summary
      condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
      inputs:
        pollingTimeoutSec: '300'

    - task: CopyFiles@2
      displayName: "Copy Files to: $(build.artifactstagingdirectory)"
      inputs:
        contents: |
          azure/**
          nuget-publish/*.nupkg
          src/**/*.dacpac
        targetFolder: "$(build.artifactstagingdirectory)/publish"

    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifact"
      inputs:
        pathtoPublish: "$(build.artifactstagingdirectory)/publish"

- job: build_test_v1
  displayName: Build and Test commitments v1 only
  pool:
    name: 'DAS - Continuous Integration'
  steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.3.0'
      inputs:
        versionSpec: 4.x

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'src/SFA.DAS.CommitmentsTestSolution.sln'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: "src/**/*.csproj"  

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: 'src/SFA.DAS.CommitmentsTestSolution.sln'
        vsVersion: 15.0
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: VSTest@2
      displayName: 'VS test'
      inputs:
        testAssemblyVer2: |
          **/bin/Release/*UnitTests.dll
          !**/CommitmentsV2/**
          !**/*Reservations.Api*/**
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
