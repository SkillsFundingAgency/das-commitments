@using SFA.DAS.Commitments.Support.SubSite.Extensions
@using SFA.DAS.Commitments.Support.SubSite.Models
@using SFA.DAS.CommitmentsV2.Types

@model ApprenticeshipViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pendingChangesRequestedBy = "There are no changes for this record";

    if (Model.ApprenticeshipUpdates != null)
    {
        pendingChangesRequestedBy = Model.ApprenticeshipUpdates.Originator == SFA.DAS.CommitmentsV2.Types.Originator.Employer
        ? "Requested by Employer "
        : "Requested by Training Provider ";
        if (Model.ApprenticeshipUpdates.CreatedOn.HasValue)
        {
            pendingChangesRequestedBy += Model.ApprenticeshipUpdates.CreatedOn.Value.ToString(format: " dd MMM yyyy");
        }
    }

}

<div class="grid-row">

    <div class="column-full">

        <h1 class="heading-large">
            @Model.Name
        </h1>

        <div>
            <table class="responsive twoColumn">
                <tbody>
                    <tr>
                        <th scope="row" class="bold tw-50">Agreement status</th>
                        <td>@Model.AgreementStatus</td>

                    </tr>
                    <tr>
                        <th scope="row" class="bold">Payment status</th>
                        <td>
                            <strong class="@($"govuk-tag govuk-tag--{Model.PaymentStatusTagColour}")">
                                @Model.PaymentStatus
                            </strong>
                        </td>
                    </tr>
                    @if (Model.MadeRedundant.HasValue)
                    {
                        <tr>
                            <th scope="row" class="bold">Made redundant</th>
                            <td>@(Model.MadeRedundant.Value ? "Yes" : "No")</td>
                        </tr>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.CompletionPaymentMonth))
                    {
                        <tr>
                            <th scope="row" class="bold">Completion payment month</th>
                            <td>@Model.CompletionPaymentMonth</td>
                        </tr>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model.StopDate))
                    {
                        <tr>
                            <th scope="row" class="bold">Stopped date</th>
                            <td>@Model.StopDate</td>
                        </tr>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model.PauseDate))
                    {
                        <tr>
                            <th scope="row" class="bold">Paused date</th>
                            <td>@Model.PauseDate</td>
                        </tr>
                    }
                    <tr>
                        <th scope="row" class="bold">Unique learner number</th>
                        <td>@Model.UlnText</td>
                    </tr>
                    <tr>
                        <th scope="row" class="bold">Email address</th>
                        <td>
                            @Model.Email
                        </td>
                    </tr>


                    <tr>
                        <th scope="row" class="bold">Training provider</th>
                        <td>@Model.TrainingProvider</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<br />

<div class="grid-row">
    <div class="column-full">
        <div class="tabs">

            <ul class="js-tabs tabs__list">
                <li class="tabs__list-item current">
                    <a href="#tab-summary" class="tabs__tab">Summary</a>
                </li>
                 <li class="tabs__list-item">
                    <a href="#tab-pending-changes" class="tabs__tab">Pending Changes</a>
                </li>

                <li class="tabs__list-item">
                   <a href="#tab-provider-history" class="tabs__tab">Training provider history</a>
                </li>
            </ul>



            <div id="tab-summary" class="js-tab-pane tabs__pane">
                <table class="responsive twoColumn">
                    <thead>
                        <tr>
                            <th colspan="2"> <h2 class="heading-medium">Apprentice</h2></th>
                        </tr>
                    </thead>
                </table>

                <table class="responsive twoColumn">
                    <tbody>
                        <tr>
                            <th scope="row" class="bold tw-50">Name</th>
                            <td>@Model.Name</td>

                        </tr>
                        <tr>
                            <th scope="row" class="bold">Date of birth</th>
                            <td>@Model.DateOfBirth.ToGdsFormatWithSpaceSeperator()</td>

                        </tr>
                        <tr>
                            <th scope="row" class="bold">Cohort reference</th>
                            <td>@Model.CohortReference</td>
                        </tr>
                        <tr>
                            <th scope="row" class="bold">Employer reference</th>
                            <td>
                                @Model.EmployerReference
                            </td>
                        </tr>
                    </tbody>
                </table>

                <table class="responsive twoColumn">
                    <thead>
                        <tr>
                            <th colspan="2"> <h2 class="heading-medium">Training</h2></th>
                        </tr>
                    </thead>
                </table>

                <table class="responsive twoColumn">
                    <tbody>
                        <tr>
                            <th scope="row" class="bold tw-50">Legal entity</th>
                            <td>@Model.LegalEntity</td>
                        </tr>
                        <tr>
                            <th scope="row" class="bold">UKPRN</th>
                            <td>@Model.UKPRN</td>
                        </tr>
                        <tr>
                            <th scope="row" class="bold">Apprenticeship training course</th>
                            <td>@Model.Trainingcourse</td>
                        </tr>
                        @if (!string.IsNullOrWhiteSpace(Model.Version))
                        {
                            <tr>
                                <th scope="row" class="bold">Version</th>
                                <td>@Model.Version</td>
                            </tr>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Option))
                        {
                            <tr>
                                <th scope="row" class="bold">Option</th>
                                <td>@Model.Option</td>
                            </tr>
                        }
                        <tr>
                            <th scope="row" class="bold">Apprenticeship code</th>
                            <td>@Model.ApprenticeshipCode</td>
                        </tr>
                        <tr>
                            <th scope="row" class="bold">Apprentice confirmation</th>
                            <td>@Model.ConfirmationStatusDescription</td>
                        </tr>
                    </tbody>
                </table>

                <table class="responsive twoColumn">
                    <thead>
                        <tr>
                            <th colspan="2"> <h2 class="heading-medium">Dates</h2></th>
                        </tr>
                    </thead>
                </table>

                <table class="responsive twoColumn">
                    <tbody>
                        <tr>
                            <th scope="row" class="bold tw-50">AS training start date</th>
                            <td>
                                @{
                                    var startDate = Model.DasTrainingStartDate?.ToGdsFormatWithoutDay() ?? "";
                                }

                                @startDate
                            </td>
                        </tr>
                        <tr>
                            <th scope="row" class="bold">AS training end date</th>
                            <td>
                                @{
                                    var endDate = Model.DasTrainingEndDate?.ToGdsFormatWithoutDay() ?? "";
                                }

                                @endDate
                            </td>
                        </tr>
                    </tbody>
                </table>

                <table class="responsive twoColumn">
                    <thead>
                        <tr>
                            <th colspan="2"> <h2 class="heading-medium">Payment</h2></th>
                        </tr>
                    </thead>
                </table>

                <table class="responsive twoColumn">
                    <tbody>
                        <tr>
                            <th scope="row" class="bold tw-50">Current training cost</th>
                            <td>@Model.TrainingCost.ToGdsCurrencyFormat()</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="tab-pending-changes" class="js-tab-pane tabs__pane">

                 <h2 class="heading-medium">Changes requested by training provider or employer</h2>
                 <div>@pendingChangesRequestedBy</div>

                 @if (Model.ApprenticeshipUpdates != null)
                 {
                     <table class="responsive threeColumn">
                         <thead>
                             <tr>
                                 <th></th>
                                 <th> <h2 class="heading-medium">Currently</h2></th>
                                 <th> <h2 class="heading-medium">Change to</h2></th>
                             </tr>
                         </thead>
                         <tbody>
                             @if (!string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.FirstName) || !string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.LastName))
                             {
                                 
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Name</th>
                                     <td class="govuk-table__cell">@Model.Name</td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.DisplayNameForUpdate</td>
                                 </tr>
                             }
                             @if (!string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.Email))
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Email</th>
                                     <td class="govuk-table__cell">
                                         @Model.Email
                                     </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.Email</td>
            
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.DateOfBirth.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Date of birth</th>
                                     <td class="govuk-table__cell">
                                         @Model.DateOfBirth.Value.ToGdsFormatWithSpaceSeperator()
                                     </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.DateOfBirth.Value.ToGdsFormatWithSpaceSeperator()</td>
            
                                 </tr>
                             }
                             @if (!string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.ULN))
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">ULN</th>
                                     <td class="govuk-table__cell">@Model.Uln</td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.ULN</td>
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.DeliveryModel.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Apprenticeship delivery model</th>
                                     <td class="govuk-table__cell">@Model.DeliveryModel.ToDescription() </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.DeliveryModel.ToDescription()</td>
                                 </tr>
            
                                 @if (Model.ApprenticeshipUpdates.DeliveryModel == DeliveryModel.Regular)
                                 {
                                     <tr>
                                         <th scope="row" class="govuk-table__header">Planned end date of this employment</th>
                                         <td class="govuk-table__cell">@(Model.EmploymentEndDate.HasValue ? Model.EmploymentEndDate.Value.ToGdsFormatWithSpaceSeperator() : "Not applicable")</td>
                                         <td class="govuk-table__cell">Not applicable</td>
                                     </tr>
                                     <tr>
                                         <th scope="row" class="govuk-table__header">Training price for this employment</th>
                                         <td class="govuk-table__cell">@(Model.EmploymentPrice.HasValue ? Model.EmploymentPrice.FormatCost() : "Not applicable")</td>
                                         <td class="govuk-table__cell">Not applicable</td>
                                     </tr>
                                 }
                             }
                             @if (Model.ApprenticeshipUpdates.EmploymentEndDate.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Planned end date of this employment</th>
                                     <td class="govuk-table__cell">@(Model.EmploymentEndDate.HasValue ? Model.EmploymentEndDate.Value.ToGdsFormatWithSpaceSeperator() : "Not applicable" ) </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.EmploymentEndDate.Value.ToGdsFormatWithSpaceSeperator()</td>
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.EmploymentPrice.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Training price for this employment</th>
                                     <td class="govuk-table__cell">@(Model.EmploymentPrice.HasValue ? Model.EmploymentPrice.FormatCost() : "Not applicable" ) </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.EmploymentPrice.FormatCost()</td>
                                 </tr>
                             }
            
                             @if (!string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.CourseName))
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Apprenticeship training course</th>
                                     <td class="govuk-table__cell">@Model.Trainingcourse </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.CourseName</td>
                                 </tr>
                             }
                             @if (!string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.Version) || !string.IsNullOrWhiteSpace(Model.ApprenticeshipUpdates.CourseCode))
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Version</th>
                                     <td class="govuk-table__cell">
                                         @(Model.Version != null ? Model.Version : "Not applicable")
                                     </td>
                                     <td class="govuk-table__cell">
                                         @(Model.ApprenticeshipUpdates.Version != null ? Model.ApprenticeshipUpdates.Version : "Not applicable")
                                     </td>
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.Option != Model.Option || !string.IsNullOrEmpty(Model.ApprenticeshipUpdates.CourseCode))
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Option</th>
                                     <td class="govuk-table__cell">
                                         @if (Model.Option == null)
                                         {
                                             <span> Not applicable</span>
                                         }
                                         else if (Model.Option == string.Empty)
                                         {
                                             <span> To be confirmed </span>
                                         }
                                         else
                                         {
                                             <span> @Model.Option </span>
                                         }
                                     </td>
                                     <td class="govuk-table__cell">
                                         @if (Model.ApprenticeshipUpdates.Option == null)
                                         {
                                             <span> Not applicable</span>
                                         }
                                         else if (Model.ApprenticeshipUpdates.Option == string.Empty)
                                         {
                                             <span> To be confirmed </span>
                                         }
                                         else
                                         {
                                             <span> @Model.ApprenticeshipUpdates.Option </span>
                                         }
                                     </td>
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.StartDate.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Planned training start date</th>
                                     <td class="govuk-table__cell">@Model.DasTrainingStartDate.Value.ToGdsFormatWithSpaceSeperator() </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.StartDate.Value.ToGdsFormatWithSpaceSeperator()</td>
            
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.EndDate.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Planned training end date</th>
                                     <td class="govuk-table__cell">@Model.DasTrainingEndDate.Value.ToGdsFormatWithSpaceSeperator() </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.EndDate.Value.ToGdsFormatWithSpaceSeperator()</td>
            
                                 </tr>
                             }
                             @if (Model.ApprenticeshipUpdates.Cost.HasValue)
                             {
                                 <tr>
                                     <th scope="row" class="govuk-table__header">Cost</th>
                                     <td class="govuk-table__cell">@Model.TrainingCost.FormatCost() </td>
                                     <td class="govuk-table__cell">@Model.ApprenticeshipUpdates.Cost.FormatCost()</td>
            
                                 </tr>
                             }
                         </tbody>
                     </table>
                 }
             </div>
                    
                
            

            <div id="tab-provider-history" class="js-tab-pane tabs__pane">

                <h2 class="heading-medium">Training provider history</h2>

                @if (Model.ApprenticeshipProviderHistory.Count > 1)
                {
                    <table class="responsive twoColumn">
                        <thead>
                            <tr>
                                <th colspan="2"> <h3 class="heading-medium">Current</h3></th>
                            </tr>
                        </thead>
                    </table>

                    <table class="responsive twoColumn">
                        <tbody>
                            <tr>
                                <th scope="row" class="bold tw-50">Current training provider</th>
                                <td>@Model.ApprenticeshipProviderHistory.First().ProviderName</td>
                            </tr>
                            <tr>
                                <th scope="row" class="bold">Current planned training dates </th>
                                <td>@Model.ApprenticeshipProviderHistory.First().StartDate.ToGdsFormatWithoutDay() to @Model.ApprenticeshipProviderHistory.First().StopDate.ToGdsFormatWithoutDay()</td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="responsive twoColumn">
                        <thead>
                            <tr>
                                <th colspan="2"> <h3 class="heading-medium">Previous</h3></th>
                            </tr>
                        </thead>
                    </table>

                    foreach (var providerHistory in Model.ApprenticeshipProviderHistory.Skip(1))
                    {
                        <table class="responsive twoColumn">
                            <tbody>
                                <tr>
                                    <th scope="row" class="bold tw-50">Previous training provider</th>
                                    <td>@providerHistory.ProviderName</td>
                                </tr>
                                <tr>
                                    <th scope="row" class="bold">Previous planned training dates </th>
                                    <td>
                                        @providerHistory.StartDate.ToGdsFormatWithoutDay() to @providerHistory.StopDate.ToGdsFormatWithoutDay()
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <br />
                    }

                }
                else
                {
                    <p class="govuk-body">
                        There is no training provider history for this record.
                    </p>
                }

            </div>
        </div>
    </div>
</div>