trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
  clean: all


    
stages:
- stage: Buildv1
  displayName: 'Build and Test'

  variables:
  - group: 'Prod Management Resources'
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'any cpu'  

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: "GitHub (SFA)"

  jobs:
  - job: 'BuildAndTestV1'
    pool:
      name: 'Continuous Integration 02 - SSD - 160ACU'
      demands: 
      - msbuild
      - visualstudio
  
  steps:
    - task: gittools.gitversion.gitversion-task.GitVersion@5
      displayName: GitVersion
      inputs:
        updateAssemblyInfo: true

    - template: azure-pipelines-templates/dependency-check.yml@das-platform-building-blocks

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.3.0'
      inputs:
        versionSpec: 4.x

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'src/SFA.DAS.Commitments.sln'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: "src/**/*.csproj"   

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: |
          src/**/*.csproj
          !**/CommitmentsV2/**
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        vsVersion: 15.0
        clean: true
        
    - task: VSTest@2
      displayName: 'VS test'
      inputs:
        testAssemblyVer2: |	      
          **/bin/**/*UnitTests.dll	 
          !**/bin/**/SFA.DAS.CommitmentPayments.WebJob.UnitTests.dll     
          !**/CommitmentsV2/**	      
          !**/*Reservations.Api*/**	     
      platform: '$(buildPlatform)'
      vsTestVersion: "15.0"    
    
    - task: VSBuild@1
      displayName: 'Publish v1 API'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Api/SFA.DAS.Commitments.Api.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true    

    - task: VSBuild@1
      displayName: 'Publish Support Site'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Support.SubSite/SFA.DAS.Commitments.Support.SubSite.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: VSBuild@1
      displayName: 'Publish v1 WebJob'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Host.WebJob/SFA.DAS.Commitments.Host.WebJob.csproj'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        clean: true


    - task: NuGetCommand@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: 'src/SFA.DAS.Commitments.Events/SFA.DAS.Commitments.Events.csproj'
        packDestination: '$(build.artifactstagingdirectory)/publish/nuget-publish'
        versioningScheme: byBuildNumber

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        packagesToPack: 'src/SFA.DAS.Commitments.Api.Client/SFA.DAS.Commitments.Api.Client.csproj;src/SFA.DAS.Commitments.Api.Types/SFA.DAS.Commitments.Api.Types.csproj;src/SFA.DAS.Commitments.Events/SFA.DAS.Commitments.Events.csproj'
        packDirectory: 'nuget-publish'
        versioningScheme: byBuildNumber
        buildProperties: 'Version="$(Build.BuildNumber)"'  
      
    - task: VSBuild@1
      displayName: 'Build DACPAC'
      inputs:
        solution: 'src/SFA.DAS.Commitments.Database/SFA.DAS.Commitments.Database.sqlproj'
        platform: 'anycpu'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'    

    - task: CopyFiles@2
      displayName: "Copy Files to: $(build.artifactstagingdirectory)"
      inputs:
        contents: |
          azure/**
          nuget-publish/*.nupkg
          src/**/*.dacpac
        targetFolder: "$(build.artifactstagingdirectory)/publish"

    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifact"
      inputs:
        pathtoPublish: "$(build.artifactstagingdirectory)/publish"

- stage: Buildv2
  displayName: 'Build and Test v2'
  jobs:
  - job: 'BuildAndTestV2'
    name: 'Continuous Integration 02 - SSD - 160ACU'
    demands: 
    - msbuild
    - visualstudio
  variables:
  - group: 'Prod Management Resources'
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'any cpu'  

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: "GitHub (SFA)"
    
  steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: "src/**/*.csproj"   

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: |
          src/CommitmentsV2/**/*.csproj
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        vsVersion: 15.0
        clean: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish v2 API'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api/SFA.DAS.CommitmentsV2.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore  --no-build'  
    
    - task: DotNetCoreCLI@2
      displayName: 'publish v2 WebJob'
      inputs:
        command: custom
        projects: 'src/CommitmentsV2/SFA.DAS.CommitmentsV2.Host/SFA.DAS.CommitmentsV2.Host.csproj'
        custom: msbuild
        arguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: 'src/CommitmentsV2/**/*.UnitTests.csproj'   
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        packagesToPack: 'src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api.Client/SFA.DAS.CommitmentsV2.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Api.Types/SFA.DAS.CommitmentsV2.Api.Types.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Messages/SFA.DAS.CommitmentsV2.Messages.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Types/SFA.DAS.CommitmentsV2.Types.csproj;src/SFA.DAS.Reservations.Api.Client/SFA.DAS.Reservations.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.ReservationsV2.Api.Client/SFA.DAS.ReservationsV2.Api.Client.csproj;src/SFA.DAS.Reservations.API.Types/SFA.DAS.Reservations.Api.Types.csproj;src/SFA.DAS.Reservations.Api.Client/SFA.DAS.Reservations.Api.Client.csproj;src/CommitmentsV2/SFA.DAS.CommitmentsV2.Shared/SFA.DAS.CommitmentsV2.Shared.csproj'
        packDirectory: 'nuget-publish'
      versioningScheme: byBuildNumber
      buildProperties: 'Version="$(Build.BuildNumber)"'
  
    - task: CopyFiles@2
      displayName: "Copy Files to: $(build.artifactstagingdirectory)"
      inputs:
        contents: |
          azure/**
          nuget-publish/*.nupkg
          src/**/*.dacpac
        targetFolder: "$(build.artifactstagingdirectory)/publish"

    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifact"
      inputs:
        pathtoPublish: "$(build.artifactstagingdirectory)/publish"

